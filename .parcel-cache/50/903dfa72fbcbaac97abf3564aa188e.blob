// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function(modules, cache, entry, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject.parcelRequire === 'function' &&
    globalObject.parcelRequire;
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x) {
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function(id, exports) {
    modules[id] = [
      function(require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  globalObject.parcelRequire = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function() {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"2255062eb63e8e00c1ffaaa0f2bbb0d8":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = 7000;
var HMR_ENV_HASH = "d751713988987e9331980363e24189ce";
module.bundle.HMR_BUNDLE_ID = "fff716d0fc3c5bb2996e0f5444293d27";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH */

var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept, acceptedAssets; // eslint-disable-next-line no-redeclare

var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
  var port = HMR_PORT || location.port;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    acceptedAssets = {};
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      // Remove error overlay if there is one
      removeErrorOverlay();
      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update

      var handled = false;
      assets.forEach(asset => {
        var didAccept = asset.type === 'css' || hmrAcceptCheck(global.parcelRequire, asset.id);

        if (didAccept) {
          handled = true;
        }
      });

      if (handled) {
        console.clear();
        assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });

        for (var i = 0; i < assetsToAccept.length; i++) {
          var id = assetsToAccept[i][1];

          if (!acceptedAssets[id]) {
            hmrAcceptRun(assetsToAccept[i][0], id);
          }
        }
      } else {
        window.location.reload();
      }
    }

    if (data.type === 'error') {
      // Log parcel errors to console
      for (let ansiDiagnostic of data.diagnostics.ansi) {
        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
        console.error('ðŸš¨ [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
      } // Render the fancy html overlay


      removeErrorOverlay();
      var overlay = createErrorOverlay(data.diagnostics.html);
      document.body.appendChild(overlay);
    }
  };

  ws.onerror = function (e) {
    console.error(e.message);
  };

  ws.onclose = function (e) {
    console.warn('[parcel] ðŸš¨ Connection to the HMR server was lost');
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
    console.log('[parcel] âœ¨ Error resolved');
  }
}

function createErrorOverlay(diagnostics) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID;
  let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';

  for (let diagnostic of diagnostics) {
    let stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
    errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          ðŸš¨ ${diagnostic.message}
        </div>
        <pre>
          ${stack}
        </pre>
        <div>
          ${diagnostic.hints.map(hint => '<div>' + hint + '</div>').join('')}
        </div>
      </div>
    `;
  }

  errorHTML += '</div>';
  overlay.innerHTML = errorHTML;
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push([bundle, k]);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function updateLink(link) {
  var newLink = link.cloneNode();

  newLink.onload = function () {
    if (link.parentNode !== null) {
      link.parentNode.removeChild(link);
    }
  };

  newLink.setAttribute('href', link.getAttribute('href').split('?')[0] + '?' + Date.now());
  link.parentNode.insertBefore(newLink, link.nextSibling);
}

var cssTimeout = null;

function reloadCSS() {
  if (cssTimeout) {
    return;
  }

  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');

    for (var i = 0; i < links.length; i++) {
      var absolute = /^https?:\/\//i.test(links[i].getAttribute('href'));

      if (!absolute) {
        updateLink(links[i]);
      }
    }

    cssTimeout = null;
  }, 50);
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    if (asset.type === 'css') {
      reloadCSS();
    } else {
      var fn = new Function('require', 'module', 'exports', asset.output);
      modules[asset.id] = [fn, asset.depsByBundle[bundle.HMR_BUNDLE_ID]];
    }
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (v) {
    return hmrAcceptCheck(v[0], v[1]);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached && cached.hot) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      var assetsToAlsoAccept = cb(function () {
        return getParents(global.parcelRequire, id);
      });

      if (assetsToAlsoAccept && assetsToAccept.length) {
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
      }
    });
  }

  acceptedAssets[id] = true;
}
},{}],"eb397b394ebff17b5f4b9224cf897db4":[function(require,module,exports) {
"use strict";

require("./styles.scss");

require("./reset.scss");

var _navigo = _interopRequireDefault(require("navigo"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

window.addEventListener("load", () => {
  const router = new _navigo.default("/");

  const render = main => document.querySelector("#main").innerHTML = main;

  router.on(() => {
    render(
    /*html*/
    `
      <section>
        <img class="images" src="https://dummyimage.com/1024x300/000/fff&text=Immagine+1" style="width:100%">
        </section>
        <h1>Hello it's me</h1>
      `);
  }).on({
    "/about": {
      as: "about",
      uses: function (match) {
        render(
        /*html*/
        `
            <div>
            <img class="images" src="https://dummyimage.com/1024x300/000/fff&text=About" style="width:100%">
            </div>
          `);
      }
    },
    "/login": {
      as: "login",
      uses: function (match) {
        render(
        /*html*/
        ` 
              <input type="text" name="username" placeholder="Inserisci Username"/>  
              <input type="password" name="pass" placeholder="Inserisci Password" />  
              <input type="submit" name="login"/>  
            `);
      }
    }
  }).resolve();
});
},{"./styles.scss":"84722469479cdadd7e989503aec9efad","navigo":"1b673b0fd0ccc95214e758d9b77f5a7c","./reset.scss":"7af71187defb94f927e5bc1d6a3508f3"}],"84722469479cdadd7e989503aec9efad":[function() {},{}],"1b673b0fd0ccc95214e758d9b77f5a7c":[function(require,module,exports) {
var define;
!function (t, n) {
  "object" == typeof exports && "object" == typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define("Navigo", [], n) : "object" == typeof exports ? exports.Navigo = n() : t.Navigo = n();
}("undefined" != typeof self ? self : this, function () {
  return (() => {
    "use strict";

    var t = {
      407: (t, n, e) => {
        e.d(n, {
          default: () => N
        });
        var o = /([:*])(\w+)/g,
            r = /\*/g,
            i = /\/\?/g;

        function a(t) {
          return void 0 === t && (t = "/"), v() ? location.pathname + location.search + location.hash : t;
        }

        function s(t) {
          return t.replace(/\/+$/, "").replace(/^\/+/, "");
        }

        function c(t) {
          return "string" == typeof t;
        }

        function u(t) {
          return t && t.indexOf("#") >= 0 && t.split("#").pop() || "";
        }

        function h(t) {
          var n = s(t).split(/\?(.*)?$/);
          return [s(n[0]), n.slice(1).join("")];
        }

        function f(t) {
          for (var n = {}, e = t.split("&"), o = 0; o < e.length; o++) {
            var r = e[o].split("=");

            if ("" !== r[0]) {
              var i = decodeURIComponent(r[0]);
              n[i] ? (Array.isArray(n[i]) || (n[i] = [n[i]]), n[i].push(decodeURIComponent(r[1] || ""))) : n[i] = decodeURIComponent(r[1] || "");
            }
          }

          return n;
        }

        function l(t, n) {
          var e,
              a = h(s(t.currentLocationPath)),
              l = a[0],
              p = a[1],
              d = "" === p ? null : f(p),
              v = [];

          if (c(n.path)) {
            if (e = "(?:/^|^)" + s(n.path).replace(o, function (t, n, e) {
              return v.push(e), "([^/]+)";
            }).replace(r, "?(?:.*)").replace(i, "/?([^/]+|)") + "$", "" === s(n.path) && "" === s(l)) return {
              url: l,
              queryString: p,
              hashString: u(t.to),
              route: n,
              data: null,
              params: d
            };
          } else e = n.path;

          var g = new RegExp(e, ""),
              m = l.match(g);

          if (m) {
            var y = c(n.path) ? function (t, n) {
              return 0 === n.length ? null : t ? t.slice(1, t.length).reduce(function (t, e, o) {
                return null === t && (t = {}), t[n[o]] = decodeURIComponent(e), t;
              }, null) : null;
            }(m, v) : m.groups ? m.groups : m.slice(1);
            return {
              url: s(l.replace(new RegExp("^" + t.instance.root), "")),
              queryString: p,
              hashString: u(t.to),
              route: n,
              data: y,
              params: d
            };
          }

          return !1;
        }

        function p() {
          return !("undefined" == typeof window || !window.history || !window.history.pushState);
        }

        function d(t, n) {
          return void 0 === t[n] || !0 === t[n];
        }

        function v() {
          return "undefined" != typeof window;
        }

        function g(t, n) {
          return void 0 === t && (t = []), void 0 === n && (n = {}), t.filter(function (t) {
            return t;
          }).forEach(function (t) {
            ["before", "after", "already", "leave"].forEach(function (e) {
              t[e] && (n[e] || (n[e] = []), n[e].push(t[e]));
            });
          }), n;
        }

        function m(t, n, e) {
          var o = n || {},
              r = 0;
          !function n() {
            t[r] ? Array.isArray(t[r]) ? (t.splice.apply(t, [r, 1].concat(t[r][0](o) ? t[r][1] : t[r][2])), n()) : t[r](o, function (t) {
              void 0 === t || !0 === t ? (r += 1, n()) : e && e(o);
            }) : e && e(o);
          }();
        }

        function y(t, n) {
          void 0 === t.currentLocationPath && (t.currentLocationPath = t.to = a(t.instance.root)), t.currentLocationPath = t.instance._checkForAHash(t.currentLocationPath), n();
        }

        function _(t, n) {
          for (var e = 0; e < t.instance.routes.length; e++) {
            var o = l(t, t.instance.routes[e]);
            if (o && (t.matches || (t.matches = []), t.matches.push(o), "ONE" === t.resolveOptions.strategy)) return void n();
          }

          n();
        }

        function O(t, n) {
          t.navigateOptions && (void 0 !== t.navigateOptions.shouldResolve && console.warn('"shouldResolve" is deprecated. Please check the documentation.'), void 0 !== t.navigateOptions.silent && console.warn('"silent" is deprecated. Please check the documentation.')), n();
        }

        function k(t, n) {
          !0 === t.navigateOptions.force ? (t.instance._setCurrent([t.instance._pathToMatchObject(t.to)]), n(!1)) : n();
        }

        m.if = function (t, n, e) {
          return Array.isArray(n) || (n = [n]), Array.isArray(e) || (e = [e]), [t, n, e];
        };

        var w = v(),
            L = p();

        function b(t, n) {
          if (d(t.navigateOptions, "updateBrowserURL")) {
            var e = ("/" + t.to).replace(/\/\//g, "/"),
                o = w && t.resolveOptions && !0 === t.resolveOptions.hash;
            L ? (history[t.navigateOptions.historyAPIMethod || "pushState"](t.navigateOptions.stateObj || {}, t.navigateOptions.title || "", o ? "#" + e : e), location && location.hash && (t.instance.__freezeListening = !0, setTimeout(function () {
              var n = location.hash;
              location.hash = "", location.hash = n, t.instance.__freezeListening = !1;
            }, 1))) : w && (window.location.href = t.to);
          }

          n();
        }

        function P(t, n) {
          var e = t.instance;
          e.lastResolved() ? m(e.lastResolved().map(function (n) {
            return function (e, o) {
              if (n.route.hooks && n.route.hooks.leave) {
                var r = !1,
                    i = t.instance.matchLocation(n.route.path, t.currentLocationPath, !1);
                r = "*" !== n.route.path ? !i : !(t.matches && t.matches.find(function (t) {
                  return n.route.path === t.route.path;
                })), d(t.navigateOptions, "callHooks") && r ? m(n.route.hooks.leave.map(function (n) {
                  return function (e, o) {
                    return n(function (n) {
                      !1 === n ? t.instance.__dirty = !1 : o();
                    }, t.matches && t.matches.length > 0 ? 1 === t.matches.length ? t.matches[0] : t.matches : void 0);
                  };
                }).concat([function () {
                  return o();
                }])) : o();
              } else o();
            };
          }), {}, function () {
            return n();
          }) : n();
        }

        function R(t, n) {
          d(t.navigateOptions, "updateState") && t.instance._setCurrent(t.matches), n();
        }

        var A = [function (t, n) {
          var e = t.instance.lastResolved();
          if (e && e[0] && e[0].route === t.match.route && e[0].url === t.match.url && e[0].queryString === t.match.queryString) return e.forEach(function (n) {
            n.route.hooks && n.route.hooks.already && d(t.navigateOptions, "callHooks") && n.route.hooks.already.forEach(function (n) {
              return n(t.match);
            });
          }), void n(!1);
          n();
        }, function (t, n) {
          t.match.route.hooks && t.match.route.hooks.before && d(t.navigateOptions, "callHooks") ? m(t.match.route.hooks.before.map(function (n) {
            return function (e, o) {
              return n(function (n) {
                !1 === n ? t.instance.__dirty = !1 : o();
              }, t.match);
            };
          }).concat([function () {
            return n();
          }])) : n();
        }, function (t, n) {
          d(t.navigateOptions, "callHandler") && t.match.route.handler(t.match), t.instance.updatePageLinks(), n();
        }, function (t, n) {
          t.match.route.hooks && t.match.route.hooks.after && d(t.navigateOptions, "callHooks") && t.match.route.hooks.after.forEach(function (n) {
            return n(t.match);
          }), n();
        }],
            E = [P, function (t, n) {
          var e = t.instance._notFoundRoute;

          if (e) {
            t.notFoundHandled = !0;
            var o = h(t.currentLocationPath),
                r = o[0],
                i = o[1],
                a = u(t.to);
            e.path = s(r);
            var c = {
              url: e.path,
              queryString: i,
              hashString: a,
              data: null,
              route: e,
              params: "" !== i ? f(i) : null
            };
            t.matches = [c], t.match = c;
          }

          n();
        }, m.if(function (t) {
          return t.notFoundHandled;
        }, A.concat([R]), [function (t, n) {
          t.resolveOptions && !1 !== t.resolveOptions.noMatchWarning && void 0 !== t.resolveOptions.noMatchWarning || console.warn('Navigo: "' + t.currentLocationPath + "\" didn't match any of the registered routes."), n();
        }, function (t, n) {
          t.instance._setCurrent(null), n();
        }])];

        function S() {
          return (S = Object.assign || function (t) {
            for (var n = 1; n < arguments.length; n++) {
              var e = arguments[n];

              for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            }

            return t;
          }).apply(this, arguments);
        }

        function x(t, n) {
          var e = 0;
          P(t, function o() {
            e !== t.matches.length ? m(A, S({}, t, {
              match: t.matches[e]
            }), function () {
              e += 1, o();
            }) : R(t, n);
          });
        }

        function H(t) {
          t.instance.__dirty = !1, t.instance.__waiting.length > 0 && t.instance.__waiting.shift()();
        }

        function j() {
          return (j = Object.assign || function (t) {
            for (var n = 1; n < arguments.length; n++) {
              var e = arguments[n];

              for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
            }

            return t;
          }).apply(this, arguments);
        }

        function N(t, n) {
          var e,
              o = n || {
            strategy: "ONE",
            hash: !1,
            noMatchWarning: !1
          },
              r = this,
              i = "/",
              d = null,
              w = [],
              L = !1,
              P = p(),
              R = v();

          function A(t) {
            return t.indexOf("#") >= 0 && (t = !0 === o.hash ? t.split("#")[1] || "/" : t.split("#")[0]), t;
          }

          function S(t) {
            return s(i + "/" + s(t));
          }

          function N(t, n, e, o) {
            return t = c(t) ? S(t) : t, {
              name: o || s(String(t)),
              path: t,
              handler: n,
              hooks: g(e)
            };
          }

          function C(t, n) {
            if (!r.__dirty) {
              r.__dirty = !0, t = t ? s(i) + "/" + s(t) : void 0;
              var e = {
                instance: r,
                to: t,
                currentLocationPath: t,
                navigateOptions: {},
                resolveOptions: j({}, o, n)
              };
              return m([y, _, m.if(function (t) {
                var n = t.matches;
                return n && n.length > 0;
              }, x, E)], e, H), !!e.matches && e.matches;
            }

            r.__waiting.push(function () {
              return r.resolve(t, n);
            });
          }

          function U(t, n) {
            if (r.__dirty) r.__waiting.push(function () {
              return r.navigate(t, n);
            });else {
              r.__dirty = !0, t = s(i) + "/" + s(t);
              var e = {
                instance: r,
                to: t,
                navigateOptions: n || {},
                resolveOptions: n && n.resolveOptions ? n.resolveOptions : o,
                currentLocationPath: A(t)
              };
              m([O, k, _, m.if(function (t) {
                var n = t.matches;
                return n && n.length > 0;
              }, x, E), b, H], e, H);
            }
          }

          function q() {
            if (R) return (R ? [].slice.call(document.querySelectorAll("[data-navigo]")) : []).forEach(function (t) {
              "false" !== t.getAttribute("data-navigo") && "_blank" !== t.getAttribute("target") ? t.hasListenerAttached || (t.hasListenerAttached = !0, t.navigoHandler = function (n) {
                if ((n.ctrlKey || n.metaKey) && "a" === n.target.tagName.toLowerCase()) return !1;
                var e = t.getAttribute("href");
                if (null == e) return !1;
                if (e.match(/^(http|https)/) && "undefined" != typeof URL) try {
                  var o = new URL(e);
                  e = o.pathname + o.search;
                } catch (t) {}

                var i = function (t) {
                  if (!t) return {};
                  var n,
                      e = t.split(","),
                      o = {};
                  return e.forEach(function (t) {
                    var e = t.split(":").map(function (t) {
                      return t.replace(/(^ +| +$)/g, "");
                    });

                    switch (e[0]) {
                      case "historyAPIMethod":
                        o.historyAPIMethod = e[1];
                        break;

                      case "resolveOptionsStrategy":
                        n || (n = {}), n.strategy = e[1];
                        break;

                      case "resolveOptionsHash":
                        n || (n = {}), n.hash = "true" === e[1];
                        break;

                      case "updateBrowserURL":
                      case "callHandler":
                      case "updateState":
                      case "force":
                        o[e[0]] = "true" === e[1];
                    }
                  }), n && (o.resolveOptions = n), o;
                }(t.getAttribute("data-navigo-options"));

                L || (n.preventDefault(), n.stopPropagation(), r.navigate(s(e), i));
              }, t.addEventListener("click", t.navigoHandler)) : t.hasListenerAttached && t.removeEventListener("click", t.navigoHandler);
            }), r;
          }

          function F(t, n, e) {
            var o = w.find(function (n) {
              return n.name === t;
            }),
                r = null;

            if (o) {
              if (r = o.path, n) for (var a in n) r = r.replace(":" + a, n[a]);
              r = r.match(/^\//) ? r : "/" + r;
            }

            return r && e && !e.includeRoot && (r = r.replace(new RegExp("^/" + i), "")), r;
          }

          function I(t) {
            var n = h(s(t)),
                o = n[0],
                r = n[1],
                i = "" === r ? null : f(r);
            return {
              url: o,
              queryString: r,
              hashString: u(t),
              route: N(o, function () {}, [e], o),
              data: null,
              params: i
            };
          }

          function M(t, n, e) {
            return "string" == typeof n && (n = T(n)), n ? (n.hooks[t] || (n.hooks[t] = []), n.hooks[t].push(e), function () {
              n.hooks[t] = n.hooks[t].filter(function (t) {
                return t !== e;
              });
            }) : (console.warn("Route doesn't exists: " + n), function () {});
          }

          function T(t) {
            return "string" == typeof t ? w.find(function (n) {
              return n.name === S(t);
            }) : w.find(function (n) {
              return n.handler === t;
            });
          }

          t ? i = s(t) : console.warn('Navigo requires a root path in its constructor. If not provided will use "/" as default.'), this.root = i, this.routes = w, this.destroyed = L, this.current = d, this.__freezeListening = !1, this.__waiting = [], this.__dirty = !1, this.on = function (t, n, o) {
            var r = this;
            return "object" != typeof t || t instanceof RegExp ? ("function" == typeof t && (o = n, n = t, t = i), w.push(N(t, n, [e, o])), this) : (Object.keys(t).forEach(function (n) {
              if ("function" == typeof t[n]) r.on(n, t[n]);else {
                var o = t[n],
                    i = o.uses,
                    a = o.as,
                    s = o.hooks;
                w.push(N(n, i, [e, s], a));
              }
            }), this);
          }, this.off = function (t) {
            return this.routes = w = w.filter(function (n) {
              return c(t) ? s(n.path) !== s(t) : "function" == typeof t ? t !== n.handler : String(n.path) !== String(t);
            }), this;
          }, this.resolve = C, this.navigate = U, this.navigateByName = function (t, n, e) {
            var o = F(t, n);
            return null !== o && (U(o.replace(new RegExp("^/?" + i), ""), e), !0);
          }, this.destroy = function () {
            this.routes = w = [], P && window.removeEventListener("popstate", this.__popstateListener), this.destroyed = L = !0;
          }, this.notFound = function (t, n) {
            return r._notFoundRoute = N("*", t, [e, n], "__NOT_FOUND__"), this;
          }, this.updatePageLinks = q, this.link = function (t) {
            return "/" + i + "/" + s(t);
          }, this.hooks = function (t) {
            return e = t, this;
          }, this.extractGETParameters = function (t) {
            return h(A(t));
          }, this.lastResolved = function () {
            return d;
          }, this.generate = F, this.getLinkPath = function (t) {
            return t.getAttribute("href");
          }, this.match = function (t) {
            var n = {
              instance: r,
              currentLocationPath: t,
              to: t,
              navigateOptions: {},
              resolveOptions: o
            };
            return _(n, function () {}), !!n.matches && n.matches;
          }, this.matchLocation = function (t, n, e) {
            void 0 === n || void 0 !== e && !e || (n = S(n));
            var o = {
              instance: r,
              to: n,
              currentLocationPath: n
            };
            return y(o, function () {}), "string" == typeof t && (t = void 0 === e || e ? S(t) : t), l(o, {
              name: String(t),
              path: t,
              handler: function () {},
              hooks: {}
            }) || !1;
          }, this.getCurrentLocation = function () {
            return I(s(a(i)).replace(new RegExp("^" + i), ""));
          }, this.addBeforeHook = M.bind(this, "before"), this.addAfterHook = M.bind(this, "after"), this.addAlreadyHook = M.bind(this, "already"), this.addLeaveHook = M.bind(this, "leave"), this.getRoute = T, this._pathToMatchObject = I, this._clean = s, this._checkForAHash = A, this._setCurrent = function (t) {
            return d = r.current = t;
          }, function () {
            P && (this.__popstateListener = function () {
              r.__freezeListening || C();
            }, window.addEventListener("popstate", this.__popstateListener));
          }.call(this), q.call(this);
        }
      }
    },
        n = {};

    function e(o) {
      if (n[o]) return n[o].exports;
      var r = n[o] = {
        exports: {}
      };
      return t[o](r, r.exports, e), r.exports;
    }

    return e.d = (t, n) => {
      for (var o in n) e.o(n, o) && !e.o(t, o) && Object.defineProperty(t, o, {
        enumerable: !0,
        get: n[o]
      });
    }, e.o = (t, n) => Object.prototype.hasOwnProperty.call(t, n), e(407);
  })().default;
}); //# sourceMappingURL=navigo.min.js.map
},{}],"7af71187defb94f927e5bc1d6a3508f3":[function() {},{}]},{},["2255062eb63e8e00c1ffaaa0f2bbb0d8","eb397b394ebff17b5f4b9224cf897db4"], null)

//# sourceMappingURL=parcel-example.fff716d0.js.map
